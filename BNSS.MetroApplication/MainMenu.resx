<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>